## -*- yaml -*-

## describe a full project
## not needed for a simple package.
# project: {
#   name: "AtlasCore",
#   deps: {
#     public: [
#       "Gaudi",
#       "DetCommon",
#     ],
#   },
# }

package: {
  name: "my-package",
  authors: ["my", "myself", "irene"],

  deps: {
    public: [
     "Control/AthenaCommon",
     "Control/AthenaKernel",
    ],

    private: [
     "Control/AthenaBaseComps",
    ],

    # specify runtime dependencies
    # e.g: python modules for scripts installed by this package
    #      binaries used by scripts installed by this package
    runtime: [
     "External/AtlasPyFwdBwdPorts", # for py-yaml
     "Tools/PyUtils",               # for setup-workarea
    ],
  },
}

options: {
  tools: ["compiler_cxx", "python"],
}

configure: {
  tools: ["compiler_cxx", "python"],
  env: {
    MY_VAR: "/some/path",
    PATH: "${MY_VAR}/bin:${PATH}",
    # or special syntax ?
    # _@_append_PATH:  "${MY_VAR}/bin",
    # PATH_@_append:  "${MY_VAR}/bin",
  },

  # -- escape hatch --
  # entry point to load personal waf-rules and functions
  # this is the equivalent of CMT's fragments, docs and patterns
  #
  # what the key of this dict is meant to represent isn't clear yet:
  #  - should this be the name of a waf-function ? (but attached to what Context?)
  #  - or the name of the (synthesized) python module under which the content
  #    of the imported file would be published ?
  #  - or require that it is just the name for a loadable waf-feature ?
  export_tools: {
    build_reflex_dict: "some/file.py",
    build_rootcint_dict: "some/other/file.py",
  },
}

build: {
  my-app: {
    features: "cxx cxxprogram",
    source: "src/app/src/app.cxx",
    use: ["aa", "bb"],
  },

  aa: {
    features: "cxx cxxshlib",
    source: "src/liba/src/liba.cxx",
    includes: "src/liba/include",
    export_includes: "src/liba/include",
  },

  bb: {
    features: "cxx cxxshlib",
    source: "src/libb/src/libb.cxx",
    includes: "src/libb/include",
    export_includes: "src/libb/include",
  },
}
## EOF ##
